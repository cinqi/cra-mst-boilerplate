{{#if addAsync}}
    import { types, flow } from 'mobx-state-tree'
{{else}}
    import { types } from 'mobx-state-tree'
{{/if}}
import makeInspectable from 'mobx-devtools-mst';

// Add following import and store created store to src/stores.js
// import {{camelCase name}}{{store_type}}Store from './models/{{store_type}}/{{properCase name}}{{store_type}}Store';
// {{camelCase name}}{{store_type}}Store,

const {{properCase name}}{{store_type}}Store = types
    .model('{{camelCase name}}{{store_type}}Store', {
        sample: types.string,
        state: types.string,
    })
    .views(self => {
        return {
            // view functions
        }
    })
    .actions(self => {
        return {
            action() {
                self.sample = 'foo'
            },
{{#if addAsync}}
            asyncAction: flow(function* asyncAction() {
                try {
                    self.sample = yield someAjaxCall();
                    self.state = "done"
                } catch (error) {
                    self.state = error
                }
            }),
{{/if}}
        }
    });

const {{camelCase name}}{{store_type}}Store = {{properCase name}}{{store_type}}Store.create({
sample: "bar",
state: "loading",
});

makeInspectable({{camelCase name}}{{store_type}}Store);

export default {{camelCase name}}{{store_type}}Store;